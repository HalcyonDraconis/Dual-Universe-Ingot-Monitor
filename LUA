-- Start Timer

unit.setTimer("LIVE",1)

-- Turn On Screen

screen.activate()

-- Stop Timer

unit.stopTimer("LIVE")

-- Turn Off Screen

screen.deactivate()
screen.clear()

--[[ FUNCTIONS ]]--

function round(number,decimals)
    local power = 100^decimals
    return math.floor((number/1000) * power) / power 
end

--[[ EXPORTED VARIABLES ]]--

local tableName = "Pure Ingot Status" --export:
local tableNameFontsize = "15em" --export:
local tableFontSize = "20px" --export:
local tableWidth = "100%" --export:
local tableHeight = "100%" --export:
local BGColor = "#252525" --export: This sets the screen background color
local use_L_or_Kg = 1 --export: Use 1 for L or 0 for Kg

--[[ Aluminium ]]--
local maxAluminium = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightAluminium = 2.70 --export:

if use_L_or_Kg == 1 then
    massAluminium = round(math.ceil(Aluminium.getItemsMass()/weightAluminium),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massAluminium = round(math.ceil(Aluminium.getItemsMass()),2)
    measurement = "Kg"
end

local percentAluminium = math.ceil(((math.ceil((Aluminium.getItemsMass()/weightAluminium) - 0.5)/maxAluminium)*100))

--[[ Carbon ]]--
local maxCarbon = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightCarbon = 2.27 --export:

if use_L_or_Kg == 1 then
    massCarbon = round(math.ceil(Carbon.getItemsMass()/weightCarbon),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massCarbon = round(math.ceil(Carbon.getItemsMass()),2)
    measurement = "Kg"
end

local percentCarbon = math.ceil(((math.ceil((Carbon.getItemsMass()/weightCarbon) - 0.5)/maxCarbon)*100))

--[[ Iron ]]--
local maxIron = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightIron = 7.85 --export:

if use_L_or_Kg == 1 then
    massIron = round(math.ceil(Iron.getItemsMass()/weightIron),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massIron = round(math.ceil(Iron.getItemsMass()),2)
    measurement = "Kg"
end

local percentIron = math.ceil(((math.ceil((Iron.getItemsMass()/weightIron) - 0.5)/maxIron)*100))

--[[ Silicon ]]--
local maxSilicon = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightSilicon = 2.33 --export:

if use_L_or_Kg == 1 then
    massSilicon = round(math.ceil(Silicon.getItemsMass()/weightSilicon),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massSilicon = round(math.ceil(Silicon.getItemsMass()),2)
    measurement = "Kg"
end

local percentSilicon = math.ceil(((math.ceil((Silicon.getItemsMass()/weightSilicon) - 0.5)/maxSilicon)*100))

--[[ Calcium ]]--
local maxCalcium = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightCalcium = 1.55 --export:

if use_L_or_Kg == 1 then
    massCalcium = round(math.ceil(Calcium.getItemsMass()/weightCalcium),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massCalcium = round(math.ceil(Calcium.getItemsMass()),2)
    measurement = "Kg"
end

local percentCalcium = math.ceil(((math.ceil((Calcium.getItemsMass()/weightCalcium) - 0.5)/maxCalcium)*100))

--[[ Chromium ]]--
local maxChromium = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightChromium = 7.19 --export:

if use_L_or_Kg == 1 then
    massChromium = round(math.ceil(Chromium.getItemsMass()/weightChromium),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massChromium = round(math.ceil(Chromium.getItemsMass()),2)
    measurement = "Kg"
end

local percentChromium = math.ceil(((math.ceil((Chromium.getItemsMass()/weightChromium) - 0.5)/maxChromium)*100))

--[[ Copper ]]--
local maxCopper = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightCopper = 8.96 --export:

if use_L_or_Kg == 1 then
    massCopper = round(math.ceil(Copper.getItemsMass()/weightCopper),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massCopper = round(math.ceil(Copper.getItemsMass()),2)
    measurement = "Kg"
end

local percentCopper = math.ceil(((math.ceil((Copper.getItemsMass()/weightCopper) - 0.5)/maxCopper)*100))

--[[ Sodium ]]--
local maxSodium = 179200 --export: This is the maximum mass allowed in container. Update as needed
local weightSodium = 0.97 --export:

if use_L_or_Kg == 1 then
    massSodium = round(math.ceil(Sodium.getItemsMass()/weightSodium),2)
    measurement = "L"
elseif use_L_or_Kg == 0 then  
    massSodium = round(math.ceil(Sodium.getItemsMass()),2)
    measurement = "Kg"
end

local percentSodium = math.ceil(((math.ceil((Sodium.getItemsMass()/weightSodium) - 0.5)/maxSodium)*100))

--[[ HTML CODE STARTS HERE ]]--

html = [[
<body>

<div class="bootstrap">
<table
	<tr style="
		width: 100%;
		color: white;
	">
	<th>]]..tableName..[[</th>

	<tr style="
		width: 100%;
		margin-bottom: 25px;
		background-color: white;
		color: black;
	">
		<th>Ingots</th>
		<th>Levels</th>
		<th>Total Ingots</th>
	<tr>
		<th>Aluminium</th>
		<th>]]..percentAluminium..[[%</th>
		<th>]]..massAluminium..measurement..[[</th>
	</tr>
	<tr>
		<th>Carbon</th>
		<th>]]..percentCarbon..[[%</th>
		<th>]]..massCarbon..measurement..[[</th>
	</tr>
	<tr>
		<th>Iron</th>
		<th>]]..percentIron..[[%</th>
		<th>]]..massIron..measurement..[[</th>
	</tr>
	<tr>
		<th>Silicon</th>
		<th>]]..percentSilicon..[[%</th>
		<th>]]..massSilicon..measurement..[[</th>
	</tr>
	<tr>
		<th>Calcium</th>
		<th>]]..percentCalcium..[[%</th>
		<th>]]..massCalcium..measurement..[[</th>
	</tr>
	<tr>
		<th>Chromium</th>
		<th>]]..percentChromium..[[%</th>
		<th>]]..massChromium..measurement..[[</th>
	</tr>
	<tr>
		<th>Copper</th>
		<th>]]..percentCopper..[[%</th>
		<th>]]..massCopper..measurement..[[</th>
	</tr>
	<tr>
		<th>Sodium</th>
		<th>]]..percentSodium..[[%</th>
		<th>]]..massSodium..measurement..[[</th>
	</tr>

</table>

<style>
body {
	background-color: ]]..BGColor..[[;
}
h1 {
  	font-size: ]]..tableNameFontsize..[[;
}
table {
  	width: ]]..tableWidth..[[;
	height: ]]..tableHeight..[[;
}
table, th, td {
  	border: 0.5px solid white;
  	border-collapse: collapse;
}
th, td {
  	padding: 10px;
  	text-align: center;
	font-size: ]]..tableFontSize..[[;
}

</style>

</div>

</body>

]]

--[[ HTML CODE ENDS HERE ]]--

screen.setHTML(html)
